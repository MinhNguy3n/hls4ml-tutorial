// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module myproject_relu_ap_fixed_12_10_5_3_0_ap_ufixed_9_7_5_3_0_ReLU_config11_s (
        ap_ready,
        layer8_out_0_val,
        layer8_out_1_val,
        layer8_out_2_val,
        layer8_out_3_val,
        layer8_out_4_val,
        layer8_out_8_val,
        layer8_out_12_val,
        layer8_out_15_val,
        layer8_out_18_val,
        layer8_out_21_val,
        layer8_out_24_val,
        layer8_out_28_val,
        layer8_out_31_val,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        ap_return_8,
        ap_return_9,
        ap_return_10,
        ap_return_11,
        ap_return_12,
        ap_rst
);


output   ap_ready;
input  [11:0] layer8_out_0_val;
input  [11:0] layer8_out_1_val;
input  [11:0] layer8_out_2_val;
input  [11:0] layer8_out_3_val;
input  [11:0] layer8_out_4_val;
input  [11:0] layer8_out_8_val;
input  [11:0] layer8_out_12_val;
input  [11:0] layer8_out_15_val;
input  [11:0] layer8_out_18_val;
input  [11:0] layer8_out_21_val;
input  [11:0] layer8_out_24_val;
input  [11:0] layer8_out_28_val;
input  [11:0] layer8_out_31_val;
output  [8:0] ap_return_0;
output  [8:0] ap_return_1;
output  [8:0] ap_return_2;
output  [8:0] ap_return_3;
output  [8:0] ap_return_4;
output  [8:0] ap_return_5;
output  [8:0] ap_return_6;
output  [8:0] ap_return_7;
output  [8:0] ap_return_8;
output  [8:0] ap_return_9;
output  [8:0] ap_return_10;
output  [8:0] ap_return_11;
output  [8:0] ap_return_12;
input   ap_rst;

wire   [0:0] icmp_ln45_fu_120_p2;
wire   [8:0] trunc_ln46_fu_126_p1;
wire   [0:0] icmp_ln45_29_fu_138_p2;
wire   [8:0] trunc_ln46_29_fu_144_p1;
wire   [0:0] icmp_ln45_30_fu_156_p2;
wire   [8:0] trunc_ln46_30_fu_162_p1;
wire   [0:0] icmp_ln45_31_fu_174_p2;
wire   [8:0] trunc_ln46_31_fu_180_p1;
wire   [0:0] icmp_ln45_32_fu_192_p2;
wire   [8:0] trunc_ln46_32_fu_198_p1;
wire   [0:0] icmp_ln45_33_fu_210_p2;
wire   [8:0] trunc_ln46_33_fu_216_p1;
wire   [0:0] icmp_ln45_34_fu_228_p2;
wire   [8:0] trunc_ln46_34_fu_234_p1;
wire   [0:0] icmp_ln45_35_fu_246_p2;
wire   [8:0] trunc_ln46_35_fu_252_p1;
wire   [0:0] icmp_ln45_36_fu_264_p2;
wire   [8:0] trunc_ln46_36_fu_270_p1;
wire   [0:0] icmp_ln45_37_fu_282_p2;
wire   [8:0] trunc_ln46_37_fu_288_p1;
wire   [0:0] icmp_ln45_38_fu_300_p2;
wire   [8:0] trunc_ln46_38_fu_306_p1;
wire   [0:0] icmp_ln45_39_fu_318_p2;
wire   [8:0] trunc_ln46_39_fu_324_p1;
wire   [0:0] icmp_ln45_40_fu_336_p2;
wire   [8:0] trunc_ln46_40_fu_342_p1;
wire   [8:0] select_ln45_fu_130_p3;
wire   [8:0] select_ln45_29_fu_148_p3;
wire   [8:0] select_ln45_30_fu_166_p3;
wire   [8:0] select_ln45_31_fu_184_p3;
wire   [8:0] select_ln45_32_fu_202_p3;
wire   [8:0] select_ln45_33_fu_220_p3;
wire   [8:0] select_ln45_34_fu_238_p3;
wire   [8:0] select_ln45_35_fu_256_p3;
wire   [8:0] select_ln45_36_fu_274_p3;
wire   [8:0] select_ln45_37_fu_292_p3;
wire   [8:0] select_ln45_38_fu_310_p3;
wire   [8:0] select_ln45_39_fu_328_p3;
wire   [8:0] select_ln45_40_fu_346_p3;

assign ap_ready = 1'b1;

assign select_ln45_29_fu_148_p3 = ((icmp_ln45_29_fu_138_p2[0:0] == 1'b1) ? trunc_ln46_29_fu_144_p1 : 9'd0);

assign select_ln45_30_fu_166_p3 = ((icmp_ln45_30_fu_156_p2[0:0] == 1'b1) ? trunc_ln46_30_fu_162_p1 : 9'd0);

assign select_ln45_31_fu_184_p3 = ((icmp_ln45_31_fu_174_p2[0:0] == 1'b1) ? trunc_ln46_31_fu_180_p1 : 9'd0);

assign select_ln45_32_fu_202_p3 = ((icmp_ln45_32_fu_192_p2[0:0] == 1'b1) ? trunc_ln46_32_fu_198_p1 : 9'd0);

assign select_ln45_33_fu_220_p3 = ((icmp_ln45_33_fu_210_p2[0:0] == 1'b1) ? trunc_ln46_33_fu_216_p1 : 9'd0);

assign select_ln45_34_fu_238_p3 = ((icmp_ln45_34_fu_228_p2[0:0] == 1'b1) ? trunc_ln46_34_fu_234_p1 : 9'd0);

assign select_ln45_35_fu_256_p3 = ((icmp_ln45_35_fu_246_p2[0:0] == 1'b1) ? trunc_ln46_35_fu_252_p1 : 9'd0);

assign select_ln45_36_fu_274_p3 = ((icmp_ln45_36_fu_264_p2[0:0] == 1'b1) ? trunc_ln46_36_fu_270_p1 : 9'd0);

assign select_ln45_37_fu_292_p3 = ((icmp_ln45_37_fu_282_p2[0:0] == 1'b1) ? trunc_ln46_37_fu_288_p1 : 9'd0);

assign select_ln45_38_fu_310_p3 = ((icmp_ln45_38_fu_300_p2[0:0] == 1'b1) ? trunc_ln46_38_fu_306_p1 : 9'd0);

assign select_ln45_39_fu_328_p3 = ((icmp_ln45_39_fu_318_p2[0:0] == 1'b1) ? trunc_ln46_39_fu_324_p1 : 9'd0);

assign select_ln45_40_fu_346_p3 = ((icmp_ln45_40_fu_336_p2[0:0] == 1'b1) ? trunc_ln46_40_fu_342_p1 : 9'd0);

assign select_ln45_fu_130_p3 = ((icmp_ln45_fu_120_p2[0:0] == 1'b1) ? trunc_ln46_fu_126_p1 : 9'd0);

assign trunc_ln46_29_fu_144_p1 = layer8_out_1_val[8:0];

assign trunc_ln46_30_fu_162_p1 = layer8_out_2_val[8:0];

assign trunc_ln46_31_fu_180_p1 = layer8_out_3_val[8:0];

assign trunc_ln46_32_fu_198_p1 = layer8_out_4_val[8:0];

assign trunc_ln46_33_fu_216_p1 = layer8_out_8_val[8:0];

assign trunc_ln46_34_fu_234_p1 = layer8_out_12_val[8:0];

assign trunc_ln46_35_fu_252_p1 = layer8_out_15_val[8:0];

assign trunc_ln46_36_fu_270_p1 = layer8_out_18_val[8:0];

assign trunc_ln46_37_fu_288_p1 = layer8_out_21_val[8:0];

assign trunc_ln46_38_fu_306_p1 = layer8_out_24_val[8:0];

assign trunc_ln46_39_fu_324_p1 = layer8_out_28_val[8:0];

assign trunc_ln46_40_fu_342_p1 = layer8_out_31_val[8:0];

assign trunc_ln46_fu_126_p1 = layer8_out_0_val[8:0];

assign ap_return_0 = select_ln45_fu_130_p3;

assign ap_return_1 = select_ln45_29_fu_148_p3;

assign ap_return_10 = select_ln45_38_fu_310_p3;

assign ap_return_11 = select_ln45_39_fu_328_p3;

assign ap_return_12 = select_ln45_40_fu_346_p3;

assign ap_return_2 = select_ln45_30_fu_166_p3;

assign ap_return_3 = select_ln45_31_fu_184_p3;

assign ap_return_4 = select_ln45_32_fu_202_p3;

assign ap_return_5 = select_ln45_33_fu_220_p3;

assign ap_return_6 = select_ln45_34_fu_238_p3;

assign ap_return_7 = select_ln45_35_fu_256_p3;

assign ap_return_8 = select_ln45_36_fu_274_p3;

assign ap_return_9 = select_ln45_37_fu_292_p3;

assign icmp_ln45_29_fu_138_p2 = (($signed(layer8_out_1_val) > $signed(12'd0)) ? 1'b1 : 1'b0);

assign icmp_ln45_30_fu_156_p2 = (($signed(layer8_out_2_val) > $signed(12'd0)) ? 1'b1 : 1'b0);

assign icmp_ln45_31_fu_174_p2 = (($signed(layer8_out_3_val) > $signed(12'd0)) ? 1'b1 : 1'b0);

assign icmp_ln45_32_fu_192_p2 = (($signed(layer8_out_4_val) > $signed(12'd0)) ? 1'b1 : 1'b0);

assign icmp_ln45_33_fu_210_p2 = (($signed(layer8_out_8_val) > $signed(12'd0)) ? 1'b1 : 1'b0);

assign icmp_ln45_34_fu_228_p2 = (($signed(layer8_out_12_val) > $signed(12'd0)) ? 1'b1 : 1'b0);

assign icmp_ln45_35_fu_246_p2 = (($signed(layer8_out_15_val) > $signed(12'd0)) ? 1'b1 : 1'b0);

assign icmp_ln45_36_fu_264_p2 = (($signed(layer8_out_18_val) > $signed(12'd0)) ? 1'b1 : 1'b0);

assign icmp_ln45_37_fu_282_p2 = (($signed(layer8_out_21_val) > $signed(12'd0)) ? 1'b1 : 1'b0);

assign icmp_ln45_38_fu_300_p2 = (($signed(layer8_out_24_val) > $signed(12'd0)) ? 1'b1 : 1'b0);

assign icmp_ln45_39_fu_318_p2 = (($signed(layer8_out_28_val) > $signed(12'd0)) ? 1'b1 : 1'b0);

assign icmp_ln45_40_fu_336_p2 = (($signed(layer8_out_31_val) > $signed(12'd0)) ? 1'b1 : 1'b0);

assign icmp_ln45_fu_120_p2 = (($signed(layer8_out_0_val) > $signed(12'd0)) ? 1'b1 : 1'b0);

endmodule //myproject_relu_ap_fixed_12_10_5_3_0_ap_ufixed_9_7_5_3_0_ReLU_config11_s
