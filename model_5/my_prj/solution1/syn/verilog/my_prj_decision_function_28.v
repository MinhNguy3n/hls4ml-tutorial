// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module my_prj_decision_function_28 (
        ap_clk,
        ap_rst,
        x_0_val,
        x_1_val,
        x_2_val,
        x_3_val,
        x_6_val,
        x_7_val,
        x_9_val,
        x_10_val,
        x_11_val,
        x_12_val,
        x_14_val,
        x_15_val,
        ap_return,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [17:0] x_0_val;
input  [17:0] x_1_val;
input  [17:0] x_2_val;
input  [17:0] x_3_val;
input  [17:0] x_6_val;
input  [17:0] x_7_val;
input  [17:0] x_9_val;
input  [17:0] x_10_val;
input  [17:0] x_11_val;
input  [17:0] x_12_val;
input  [17:0] x_14_val;
input  [17:0] x_15_val;
output  [11:0] ap_return;
input   ap_ce;

wire   [0:0] icmp_ln86_fu_328_p2;
reg   [0:0] icmp_ln86_reg_1316;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln86_reg_1316_pp0_iter1_reg;
reg   [0:0] icmp_ln86_reg_1316_pp0_iter2_reg;
reg   [0:0] icmp_ln86_reg_1316_pp0_iter3_reg;
wire   [0:0] icmp_ln86_794_fu_334_p2;
reg   [0:0] icmp_ln86_794_reg_1327;
wire   [0:0] icmp_ln86_795_fu_340_p2;
reg   [0:0] icmp_ln86_795_reg_1332;
reg   [0:0] icmp_ln86_795_reg_1332_pp0_iter1_reg;
reg   [0:0] icmp_ln86_795_reg_1332_pp0_iter2_reg;
wire   [0:0] icmp_ln86_796_fu_346_p2;
reg   [0:0] icmp_ln86_796_reg_1338;
wire   [0:0] icmp_ln86_797_fu_352_p2;
reg   [0:0] icmp_ln86_797_reg_1344;
reg   [0:0] icmp_ln86_797_reg_1344_pp0_iter1_reg;
wire   [0:0] icmp_ln86_798_fu_358_p2;
reg   [0:0] icmp_ln86_798_reg_1350;
reg   [0:0] icmp_ln86_798_reg_1350_pp0_iter1_reg;
reg   [0:0] icmp_ln86_798_reg_1350_pp0_iter2_reg;
reg   [0:0] icmp_ln86_798_reg_1350_pp0_iter3_reg;
wire   [0:0] icmp_ln86_799_fu_364_p2;
reg   [0:0] icmp_ln86_799_reg_1356;
reg   [0:0] icmp_ln86_799_reg_1356_pp0_iter1_reg;
reg   [0:0] icmp_ln86_799_reg_1356_pp0_iter2_reg;
reg   [0:0] icmp_ln86_799_reg_1356_pp0_iter3_reg;
wire   [0:0] icmp_ln86_800_fu_370_p2;
reg   [0:0] icmp_ln86_800_reg_1362;
wire   [0:0] icmp_ln86_801_fu_376_p2;
reg   [0:0] icmp_ln86_801_reg_1368;
reg   [0:0] icmp_ln86_801_reg_1368_pp0_iter1_reg;
wire   [0:0] icmp_ln86_802_fu_382_p2;
reg   [0:0] icmp_ln86_802_reg_1374;
reg   [0:0] icmp_ln86_802_reg_1374_pp0_iter1_reg;
reg   [0:0] icmp_ln86_802_reg_1374_pp0_iter2_reg;
wire   [0:0] icmp_ln86_803_fu_388_p2;
reg   [0:0] icmp_ln86_803_reg_1380;
reg   [0:0] icmp_ln86_803_reg_1380_pp0_iter1_reg;
reg   [0:0] icmp_ln86_803_reg_1380_pp0_iter2_reg;
reg   [0:0] icmp_ln86_803_reg_1380_pp0_iter3_reg;
wire   [0:0] icmp_ln86_804_fu_394_p2;
reg   [0:0] icmp_ln86_804_reg_1386;
reg   [0:0] icmp_ln86_804_reg_1386_pp0_iter1_reg;
reg   [0:0] icmp_ln86_804_reg_1386_pp0_iter2_reg;
reg   [0:0] icmp_ln86_804_reg_1386_pp0_iter3_reg;
wire   [0:0] icmp_ln86_805_fu_400_p2;
reg   [0:0] icmp_ln86_805_reg_1392;
reg   [0:0] icmp_ln86_805_reg_1392_pp0_iter1_reg;
reg   [0:0] icmp_ln86_805_reg_1392_pp0_iter2_reg;
reg   [0:0] icmp_ln86_805_reg_1392_pp0_iter3_reg;
reg   [0:0] icmp_ln86_805_reg_1392_pp0_iter4_reg;
wire   [0:0] icmp_ln86_806_fu_406_p2;
reg   [0:0] icmp_ln86_806_reg_1398;
reg   [0:0] icmp_ln86_806_reg_1398_pp0_iter1_reg;
reg   [0:0] icmp_ln86_806_reg_1398_pp0_iter2_reg;
reg   [0:0] icmp_ln86_806_reg_1398_pp0_iter3_reg;
reg   [0:0] icmp_ln86_806_reg_1398_pp0_iter4_reg;
reg   [0:0] icmp_ln86_806_reg_1398_pp0_iter5_reg;
wire   [0:0] icmp_ln86_807_fu_412_p2;
reg   [0:0] icmp_ln86_807_reg_1404;
reg   [0:0] icmp_ln86_807_reg_1404_pp0_iter1_reg;
reg   [0:0] icmp_ln86_807_reg_1404_pp0_iter2_reg;
reg   [0:0] icmp_ln86_807_reg_1404_pp0_iter3_reg;
reg   [0:0] icmp_ln86_807_reg_1404_pp0_iter4_reg;
reg   [0:0] icmp_ln86_807_reg_1404_pp0_iter5_reg;
reg   [0:0] icmp_ln86_807_reg_1404_pp0_iter6_reg;
wire   [0:0] icmp_ln86_808_fu_418_p2;
reg   [0:0] icmp_ln86_808_reg_1410;
reg   [0:0] icmp_ln86_808_reg_1410_pp0_iter1_reg;
wire   [0:0] icmp_ln86_809_fu_424_p2;
reg   [0:0] icmp_ln86_809_reg_1415;
wire   [0:0] icmp_ln86_810_fu_430_p2;
reg   [0:0] icmp_ln86_810_reg_1420;
reg   [0:0] icmp_ln86_810_reg_1420_pp0_iter1_reg;
wire   [0:0] icmp_ln86_811_fu_436_p2;
reg   [0:0] icmp_ln86_811_reg_1425;
reg   [0:0] icmp_ln86_811_reg_1425_pp0_iter1_reg;
wire   [0:0] icmp_ln86_812_fu_442_p2;
reg   [0:0] icmp_ln86_812_reg_1430;
reg   [0:0] icmp_ln86_812_reg_1430_pp0_iter1_reg;
reg   [0:0] icmp_ln86_812_reg_1430_pp0_iter2_reg;
wire   [0:0] icmp_ln86_813_fu_448_p2;
reg   [0:0] icmp_ln86_813_reg_1435;
reg   [0:0] icmp_ln86_813_reg_1435_pp0_iter1_reg;
reg   [0:0] icmp_ln86_813_reg_1435_pp0_iter2_reg;
wire   [0:0] icmp_ln86_814_fu_454_p2;
reg   [0:0] icmp_ln86_814_reg_1440;
reg   [0:0] icmp_ln86_814_reg_1440_pp0_iter1_reg;
reg   [0:0] icmp_ln86_814_reg_1440_pp0_iter2_reg;
wire   [0:0] icmp_ln86_815_fu_460_p2;
reg   [0:0] icmp_ln86_815_reg_1445;
reg   [0:0] icmp_ln86_815_reg_1445_pp0_iter1_reg;
reg   [0:0] icmp_ln86_815_reg_1445_pp0_iter2_reg;
reg   [0:0] icmp_ln86_815_reg_1445_pp0_iter3_reg;
wire   [0:0] icmp_ln86_816_fu_466_p2;
reg   [0:0] icmp_ln86_816_reg_1450;
reg   [0:0] icmp_ln86_816_reg_1450_pp0_iter1_reg;
reg   [0:0] icmp_ln86_816_reg_1450_pp0_iter2_reg;
reg   [0:0] icmp_ln86_816_reg_1450_pp0_iter3_reg;
wire   [0:0] icmp_ln86_817_fu_472_p2;
reg   [0:0] icmp_ln86_817_reg_1455;
reg   [0:0] icmp_ln86_817_reg_1455_pp0_iter1_reg;
reg   [0:0] icmp_ln86_817_reg_1455_pp0_iter2_reg;
reg   [0:0] icmp_ln86_817_reg_1455_pp0_iter3_reg;
wire   [0:0] icmp_ln86_818_fu_478_p2;
reg   [0:0] icmp_ln86_818_reg_1460;
reg   [0:0] icmp_ln86_818_reg_1460_pp0_iter1_reg;
reg   [0:0] icmp_ln86_818_reg_1460_pp0_iter2_reg;
reg   [0:0] icmp_ln86_818_reg_1460_pp0_iter3_reg;
reg   [0:0] icmp_ln86_818_reg_1460_pp0_iter4_reg;
wire   [0:0] icmp_ln86_819_fu_484_p2;
reg   [0:0] icmp_ln86_819_reg_1465;
reg   [0:0] icmp_ln86_819_reg_1465_pp0_iter1_reg;
reg   [0:0] icmp_ln86_819_reg_1465_pp0_iter2_reg;
reg   [0:0] icmp_ln86_819_reg_1465_pp0_iter3_reg;
reg   [0:0] icmp_ln86_819_reg_1465_pp0_iter4_reg;
wire   [0:0] icmp_ln86_820_fu_490_p2;
reg   [0:0] icmp_ln86_820_reg_1470;
reg   [0:0] icmp_ln86_820_reg_1470_pp0_iter1_reg;
reg   [0:0] icmp_ln86_820_reg_1470_pp0_iter2_reg;
reg   [0:0] icmp_ln86_820_reg_1470_pp0_iter3_reg;
reg   [0:0] icmp_ln86_820_reg_1470_pp0_iter4_reg;
wire   [0:0] icmp_ln86_821_fu_496_p2;
reg   [0:0] icmp_ln86_821_reg_1475;
reg   [0:0] icmp_ln86_821_reg_1475_pp0_iter1_reg;
reg   [0:0] icmp_ln86_821_reg_1475_pp0_iter2_reg;
reg   [0:0] icmp_ln86_821_reg_1475_pp0_iter3_reg;
reg   [0:0] icmp_ln86_821_reg_1475_pp0_iter4_reg;
reg   [0:0] icmp_ln86_821_reg_1475_pp0_iter5_reg;
wire   [0:0] icmp_ln86_822_fu_502_p2;
reg   [0:0] icmp_ln86_822_reg_1480;
reg   [0:0] icmp_ln86_822_reg_1480_pp0_iter1_reg;
reg   [0:0] icmp_ln86_822_reg_1480_pp0_iter2_reg;
reg   [0:0] icmp_ln86_822_reg_1480_pp0_iter3_reg;
reg   [0:0] icmp_ln86_822_reg_1480_pp0_iter4_reg;
reg   [0:0] icmp_ln86_822_reg_1480_pp0_iter5_reg;
wire   [0:0] icmp_ln86_823_fu_508_p2;
reg   [0:0] icmp_ln86_823_reg_1485;
reg   [0:0] icmp_ln86_823_reg_1485_pp0_iter1_reg;
reg   [0:0] icmp_ln86_823_reg_1485_pp0_iter2_reg;
reg   [0:0] icmp_ln86_823_reg_1485_pp0_iter3_reg;
reg   [0:0] icmp_ln86_823_reg_1485_pp0_iter4_reg;
reg   [0:0] icmp_ln86_823_reg_1485_pp0_iter5_reg;
reg   [0:0] icmp_ln86_823_reg_1485_pp0_iter6_reg;
wire   [0:0] and_ln102_fu_514_p2;
reg   [0:0] and_ln102_reg_1490;
reg   [0:0] and_ln102_reg_1490_pp0_iter1_reg;
reg   [0:0] and_ln102_reg_1490_pp0_iter2_reg;
wire   [0:0] and_ln104_fu_525_p2;
reg   [0:0] and_ln104_reg_1500;
wire   [0:0] and_ln102_769_fu_530_p2;
reg   [0:0] and_ln102_769_reg_1506;
wire   [0:0] and_ln104_157_fu_539_p2;
reg   [0:0] and_ln104_157_reg_1513;
wire   [0:0] and_ln102_773_fu_544_p2;
reg   [0:0] and_ln102_773_reg_1518;
wire   [0:0] and_ln102_774_fu_554_p2;
reg   [0:0] and_ln102_774_reg_1524;
wire   [0:0] or_ln117_fu_570_p2;
reg   [0:0] or_ln117_reg_1530;
wire   [0:0] xor_ln104_fu_576_p2;
reg   [0:0] xor_ln104_reg_1535;
wire   [0:0] and_ln102_770_fu_581_p2;
reg   [0:0] and_ln102_770_reg_1541;
wire   [0:0] and_ln104_158_fu_590_p2;
reg   [0:0] and_ln104_158_reg_1547;
reg   [0:0] and_ln104_158_reg_1547_pp0_iter3_reg;
wire   [0:0] and_ln102_775_fu_600_p2;
reg   [0:0] and_ln102_775_reg_1553;
wire   [3:0] select_ln117_776_fu_701_p3;
reg   [3:0] select_ln117_776_reg_1558;
wire   [0:0] or_ln117_735_fu_708_p2;
reg   [0:0] or_ln117_735_reg_1563;
wire   [0:0] and_ln102_768_fu_713_p2;
reg   [0:0] and_ln102_768_reg_1569;
wire   [0:0] and_ln104_156_fu_722_p2;
reg   [0:0] and_ln104_156_reg_1575;
wire   [0:0] and_ln102_771_fu_727_p2;
reg   [0:0] and_ln102_771_reg_1581;
wire   [0:0] and_ln102_777_fu_741_p2;
reg   [0:0] and_ln102_777_reg_1587;
wire   [0:0] or_ln117_739_fu_815_p2;
reg   [0:0] or_ln117_739_reg_1593;
wire   [3:0] select_ln117_782_fu_829_p3;
reg   [3:0] select_ln117_782_reg_1598;
wire   [0:0] and_ln104_159_fu_842_p2;
reg   [0:0] and_ln104_159_reg_1603;
wire   [0:0] and_ln102_772_fu_847_p2;
reg   [0:0] and_ln102_772_reg_1608;
reg   [0:0] and_ln102_772_reg_1608_pp0_iter5_reg;
wire   [0:0] and_ln104_160_fu_856_p2;
reg   [0:0] and_ln104_160_reg_1615;
reg   [0:0] and_ln104_160_reg_1615_pp0_iter5_reg;
reg   [0:0] and_ln104_160_reg_1615_pp0_iter6_reg;
wire   [0:0] and_ln102_778_fu_871_p2;
reg   [0:0] and_ln102_778_reg_1621;
wire   [0:0] or_ln117_744_fu_954_p2;
reg   [0:0] or_ln117_744_reg_1626;
wire   [4:0] select_ln117_788_fu_966_p3;
reg   [4:0] select_ln117_788_reg_1631;
wire   [0:0] or_ln117_746_fu_974_p2;
reg   [0:0] or_ln117_746_reg_1636;
wire   [0:0] or_ln117_748_fu_980_p2;
reg   [0:0] or_ln117_748_reg_1642;
reg   [0:0] or_ln117_748_reg_1642_pp0_iter5_reg;
wire   [0:0] or_ln117_750_fu_1056_p2;
reg   [0:0] or_ln117_750_reg_1650;
wire   [4:0] select_ln117_794_fu_1069_p3;
reg   [4:0] select_ln117_794_reg_1655;
wire   [0:0] or_ln117_754_fu_1131_p2;
reg   [0:0] or_ln117_754_reg_1660;
wire   [4:0] select_ln117_798_fu_1145_p3;
reg   [4:0] select_ln117_798_reg_1665;
wire    ap_block_pp0_stage0;
wire   [0:0] xor_ln104_383_fu_520_p2;
wire   [0:0] xor_ln104_385_fu_534_p2;
wire   [0:0] xor_ln104_389_fu_549_p2;
wire   [0:0] and_ln102_797_fu_559_p2;
wire   [0:0] and_ln102_782_fu_564_p2;
wire   [0:0] xor_ln104_386_fu_585_p2;
wire   [0:0] xor_ln104_390_fu_595_p2;
wire   [0:0] and_ln102_798_fu_613_p2;
wire   [0:0] and_ln102_781_fu_605_p2;
wire   [0:0] xor_ln117_fu_623_p2;
wire   [1:0] zext_ln117_fu_629_p1;
wire   [1:0] select_ln117_fu_633_p3;
wire   [1:0] select_ln117_771_fu_640_p3;
wire   [0:0] and_ln102_783_fu_609_p2;
wire   [2:0] zext_ln117_85_fu_647_p1;
wire   [0:0] or_ln117_731_fu_651_p2;
wire   [2:0] select_ln117_772_fu_656_p3;
wire   [0:0] or_ln117_732_fu_663_p2;
wire   [0:0] and_ln102_784_fu_618_p2;
wire   [2:0] select_ln117_773_fu_667_p3;
wire   [0:0] or_ln117_733_fu_675_p2;
wire   [2:0] select_ln117_774_fu_681_p3;
wire   [2:0] select_ln117_775_fu_689_p3;
wire   [3:0] zext_ln117_86_fu_697_p1;
wire   [0:0] xor_ln104_384_fu_717_p2;
wire   [0:0] xor_ln104_391_fu_732_p2;
wire   [0:0] and_ln102_799_fu_750_p2;
wire   [0:0] and_ln102_776_fu_737_p2;
wire   [0:0] and_ln102_785_fu_746_p2;
wire   [0:0] or_ln117_734_fu_765_p2;
wire   [0:0] and_ln102_786_fu_755_p2;
wire   [3:0] select_ln117_777_fu_770_p3;
wire   [0:0] or_ln117_736_fu_777_p2;
wire   [3:0] select_ln117_778_fu_782_p3;
wire   [0:0] or_ln117_737_fu_789_p2;
wire   [0:0] and_ln102_787_fu_760_p2;
wire   [3:0] select_ln117_779_fu_793_p3;
wire   [0:0] or_ln117_738_fu_801_p2;
wire   [3:0] select_ln117_780_fu_807_p3;
wire   [3:0] select_ln117_781_fu_821_p3;
wire   [0:0] xor_ln104_387_fu_837_p2;
wire   [0:0] xor_ln104_388_fu_851_p2;
wire   [0:0] xor_ln104_392_fu_861_p2;
wire   [0:0] and_ln102_800_fu_876_p2;
wire   [0:0] xor_ln104_393_fu_866_p2;
wire   [0:0] and_ln102_801_fu_890_p2;
wire   [0:0] and_ln102_788_fu_881_p2;
wire   [0:0] or_ln117_740_fu_900_p2;
wire   [3:0] select_ln117_783_fu_905_p3;
wire   [0:0] and_ln102_789_fu_886_p2;
wire   [4:0] zext_ln117_87_fu_912_p1;
wire   [0:0] or_ln117_741_fu_916_p2;
wire   [4:0] select_ln117_784_fu_921_p3;
wire   [0:0] or_ln117_742_fu_928_p2;
wire   [0:0] and_ln102_790_fu_895_p2;
wire   [4:0] select_ln117_785_fu_932_p3;
wire   [0:0] or_ln117_743_fu_940_p2;
wire   [4:0] select_ln117_786_fu_946_p3;
wire   [4:0] select_ln117_787_fu_958_p3;
wire   [0:0] xor_ln104_394_fu_984_p2;
wire   [0:0] and_ln102_802_fu_997_p2;
wire   [0:0] and_ln102_779_fu_989_p2;
wire   [0:0] and_ln102_791_fu_993_p2;
wire   [0:0] or_ln117_745_fu_1012_p2;
wire   [0:0] and_ln102_792_fu_1002_p2;
wire   [4:0] select_ln117_789_fu_1017_p3;
wire   [0:0] or_ln117_747_fu_1024_p2;
wire   [4:0] select_ln117_790_fu_1029_p3;
wire   [0:0] and_ln102_793_fu_1007_p2;
wire   [4:0] select_ln117_791_fu_1036_p3;
wire   [0:0] or_ln117_749_fu_1044_p2;
wire   [4:0] select_ln117_792_fu_1049_p3;
wire   [4:0] select_ln117_793_fu_1061_p3;
wire   [0:0] xor_ln104_395_fu_1077_p2;
wire   [0:0] and_ln102_803_fu_1086_p2;
wire   [0:0] and_ln102_780_fu_1082_p2;
wire   [0:0] and_ln102_794_fu_1091_p2;
wire   [0:0] or_ln117_751_fu_1101_p2;
wire   [0:0] or_ln117_752_fu_1106_p2;
wire   [0:0] and_ln102_795_fu_1096_p2;
wire   [4:0] select_ln117_795_fu_1110_p3;
wire   [0:0] or_ln117_753_fu_1117_p2;
wire   [4:0] select_ln117_796_fu_1123_p3;
wire   [4:0] select_ln117_797_fu_1137_p3;
wire   [0:0] xor_ln104_396_fu_1153_p2;
wire   [0:0] and_ln102_804_fu_1158_p2;
wire   [0:0] and_ln102_796_fu_1163_p2;
wire   [0:0] or_ln117_755_fu_1168_p2;
wire   [11:0] agg_result_fu_1180_p65;
wire   [4:0] agg_result_fu_1180_p66;
wire   [11:0] agg_result_fu_1180_p67;
reg   [17:0] x_0_val_int_reg;
reg   [17:0] x_1_val_int_reg;
reg   [17:0] x_2_val_int_reg;
reg   [17:0] x_3_val_int_reg;
reg   [17:0] x_6_val_int_reg;
reg   [17:0] x_7_val_int_reg;
reg   [17:0] x_9_val_int_reg;
reg   [17:0] x_10_val_int_reg;
reg   [17:0] x_11_val_int_reg;
reg   [17:0] x_12_val_int_reg;
reg   [17:0] x_14_val_int_reg;
reg   [17:0] x_15_val_int_reg;
wire   [4:0] agg_result_fu_1180_p1;
wire   [4:0] agg_result_fu_1180_p3;
wire   [4:0] agg_result_fu_1180_p5;
wire   [4:0] agg_result_fu_1180_p7;
wire   [4:0] agg_result_fu_1180_p9;
wire   [4:0] agg_result_fu_1180_p11;
wire   [4:0] agg_result_fu_1180_p13;
wire   [4:0] agg_result_fu_1180_p15;
wire   [4:0] agg_result_fu_1180_p17;
wire   [4:0] agg_result_fu_1180_p19;
wire   [4:0] agg_result_fu_1180_p21;
wire   [4:0] agg_result_fu_1180_p23;
wire   [4:0] agg_result_fu_1180_p25;
wire   [4:0] agg_result_fu_1180_p27;
wire   [4:0] agg_result_fu_1180_p29;
wire   [4:0] agg_result_fu_1180_p31;
wire  signed [4:0] agg_result_fu_1180_p33;
wire  signed [4:0] agg_result_fu_1180_p35;
wire  signed [4:0] agg_result_fu_1180_p37;
wire  signed [4:0] agg_result_fu_1180_p39;
wire  signed [4:0] agg_result_fu_1180_p41;
wire  signed [4:0] agg_result_fu_1180_p43;
wire  signed [4:0] agg_result_fu_1180_p45;
wire  signed [4:0] agg_result_fu_1180_p47;
wire  signed [4:0] agg_result_fu_1180_p49;
wire  signed [4:0] agg_result_fu_1180_p51;
wire  signed [4:0] agg_result_fu_1180_p53;
wire  signed [4:0] agg_result_fu_1180_p55;
wire  signed [4:0] agg_result_fu_1180_p57;
wire  signed [4:0] agg_result_fu_1180_p59;
wire  signed [4:0] agg_result_fu_1180_p61;
wire  signed [4:0] agg_result_fu_1180_p63;
wire    ap_ce_reg;

(* dissolve_hierarchy = "yes" *) my_prj_sparsemux_65_5_12_1_1_x21 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 5'h0 ),
    .din0_WIDTH( 12 ),
    .CASE1( 5'h1 ),
    .din1_WIDTH( 12 ),
    .CASE2( 5'h2 ),
    .din2_WIDTH( 12 ),
    .CASE3( 5'h3 ),
    .din3_WIDTH( 12 ),
    .CASE4( 5'h4 ),
    .din4_WIDTH( 12 ),
    .CASE5( 5'h5 ),
    .din5_WIDTH( 12 ),
    .CASE6( 5'h6 ),
    .din6_WIDTH( 12 ),
    .CASE7( 5'h7 ),
    .din7_WIDTH( 12 ),
    .CASE8( 5'h8 ),
    .din8_WIDTH( 12 ),
    .CASE9( 5'h9 ),
    .din9_WIDTH( 12 ),
    .CASE10( 5'hA ),
    .din10_WIDTH( 12 ),
    .CASE11( 5'hB ),
    .din11_WIDTH( 12 ),
    .CASE12( 5'hC ),
    .din12_WIDTH( 12 ),
    .CASE13( 5'hD ),
    .din13_WIDTH( 12 ),
    .CASE14( 5'hE ),
    .din14_WIDTH( 12 ),
    .CASE15( 5'hF ),
    .din15_WIDTH( 12 ),
    .CASE16( 5'h10 ),
    .din16_WIDTH( 12 ),
    .CASE17( 5'h11 ),
    .din17_WIDTH( 12 ),
    .CASE18( 5'h12 ),
    .din18_WIDTH( 12 ),
    .CASE19( 5'h13 ),
    .din19_WIDTH( 12 ),
    .CASE20( 5'h14 ),
    .din20_WIDTH( 12 ),
    .CASE21( 5'h15 ),
    .din21_WIDTH( 12 ),
    .CASE22( 5'h16 ),
    .din22_WIDTH( 12 ),
    .CASE23( 5'h17 ),
    .din23_WIDTH( 12 ),
    .CASE24( 5'h18 ),
    .din24_WIDTH( 12 ),
    .CASE25( 5'h19 ),
    .din25_WIDTH( 12 ),
    .CASE26( 5'h1A ),
    .din26_WIDTH( 12 ),
    .CASE27( 5'h1B ),
    .din27_WIDTH( 12 ),
    .CASE28( 5'h1C ),
    .din28_WIDTH( 12 ),
    .CASE29( 5'h1D ),
    .din29_WIDTH( 12 ),
    .CASE30( 5'h1E ),
    .din30_WIDTH( 12 ),
    .CASE31( 5'h1F ),
    .din31_WIDTH( 12 ),
    .def_WIDTH( 12 ),
    .sel_WIDTH( 5 ),
    .dout_WIDTH( 12 ))
sparsemux_65_5_12_1_1_x21_U903(
    .din0(12'd136),
    .din1(12'd24),
    .din2(12'd3614),
    .din3(12'd219),
    .din4(12'd166),
    .din5(12'd3906),
    .din6(12'd7),
    .din7(12'd4049),
    .din8(12'd63),
    .din9(12'd4071),
    .din10(12'd27),
    .din11(12'd4055),
    .din12(12'd302),
    .din13(12'd12),
    .din14(12'd3104),
    .din15(12'd3999),
    .din16(12'd69),
    .din17(12'd3656),
    .din18(12'd91),
    .din19(12'd378),
    .din20(12'd4059),
    .din21(12'd3726),
    .din22(12'd776),
    .din23(12'd3961),
    .din24(12'd3954),
    .din25(12'd4084),
    .din26(12'd525),
    .din27(12'd3833),
    .din28(12'd7),
    .din29(12'd1756),
    .din30(12'd46),
    .din31(12'd3857),
    .def(agg_result_fu_1180_p65),
    .sel(agg_result_fu_1180_p66),
    .dout(agg_result_fu_1180_p67)
);

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce))) begin
        and_ln102_768_reg_1569 <= and_ln102_768_fu_713_p2;
        and_ln102_769_reg_1506 <= and_ln102_769_fu_530_p2;
        and_ln102_770_reg_1541 <= and_ln102_770_fu_581_p2;
        and_ln102_771_reg_1581 <= and_ln102_771_fu_727_p2;
        and_ln102_772_reg_1608 <= and_ln102_772_fu_847_p2;
        and_ln102_772_reg_1608_pp0_iter5_reg <= and_ln102_772_reg_1608;
        and_ln102_773_reg_1518 <= and_ln102_773_fu_544_p2;
        and_ln102_774_reg_1524 <= and_ln102_774_fu_554_p2;
        and_ln102_775_reg_1553 <= and_ln102_775_fu_600_p2;
        and_ln102_777_reg_1587 <= and_ln102_777_fu_741_p2;
        and_ln102_778_reg_1621 <= and_ln102_778_fu_871_p2;
        and_ln102_reg_1490 <= and_ln102_fu_514_p2;
        and_ln102_reg_1490_pp0_iter1_reg <= and_ln102_reg_1490;
        and_ln102_reg_1490_pp0_iter2_reg <= and_ln102_reg_1490_pp0_iter1_reg;
        and_ln104_156_reg_1575 <= and_ln104_156_fu_722_p2;
        and_ln104_157_reg_1513 <= and_ln104_157_fu_539_p2;
        and_ln104_158_reg_1547 <= and_ln104_158_fu_590_p2;
        and_ln104_158_reg_1547_pp0_iter3_reg <= and_ln104_158_reg_1547;
        and_ln104_159_reg_1603 <= and_ln104_159_fu_842_p2;
        and_ln104_160_reg_1615 <= and_ln104_160_fu_856_p2;
        and_ln104_160_reg_1615_pp0_iter5_reg <= and_ln104_160_reg_1615;
        and_ln104_160_reg_1615_pp0_iter6_reg <= and_ln104_160_reg_1615_pp0_iter5_reg;
        and_ln104_reg_1500 <= and_ln104_fu_525_p2;
        icmp_ln86_794_reg_1327 <= icmp_ln86_794_fu_334_p2;
        icmp_ln86_795_reg_1332 <= icmp_ln86_795_fu_340_p2;
        icmp_ln86_795_reg_1332_pp0_iter1_reg <= icmp_ln86_795_reg_1332;
        icmp_ln86_795_reg_1332_pp0_iter2_reg <= icmp_ln86_795_reg_1332_pp0_iter1_reg;
        icmp_ln86_796_reg_1338 <= icmp_ln86_796_fu_346_p2;
        icmp_ln86_797_reg_1344 <= icmp_ln86_797_fu_352_p2;
        icmp_ln86_797_reg_1344_pp0_iter1_reg <= icmp_ln86_797_reg_1344;
        icmp_ln86_798_reg_1350 <= icmp_ln86_798_fu_358_p2;
        icmp_ln86_798_reg_1350_pp0_iter1_reg <= icmp_ln86_798_reg_1350;
        icmp_ln86_798_reg_1350_pp0_iter2_reg <= icmp_ln86_798_reg_1350_pp0_iter1_reg;
        icmp_ln86_798_reg_1350_pp0_iter3_reg <= icmp_ln86_798_reg_1350_pp0_iter2_reg;
        icmp_ln86_799_reg_1356 <= icmp_ln86_799_fu_364_p2;
        icmp_ln86_799_reg_1356_pp0_iter1_reg <= icmp_ln86_799_reg_1356;
        icmp_ln86_799_reg_1356_pp0_iter2_reg <= icmp_ln86_799_reg_1356_pp0_iter1_reg;
        icmp_ln86_799_reg_1356_pp0_iter3_reg <= icmp_ln86_799_reg_1356_pp0_iter2_reg;
        icmp_ln86_800_reg_1362 <= icmp_ln86_800_fu_370_p2;
        icmp_ln86_801_reg_1368 <= icmp_ln86_801_fu_376_p2;
        icmp_ln86_801_reg_1368_pp0_iter1_reg <= icmp_ln86_801_reg_1368;
        icmp_ln86_802_reg_1374 <= icmp_ln86_802_fu_382_p2;
        icmp_ln86_802_reg_1374_pp0_iter1_reg <= icmp_ln86_802_reg_1374;
        icmp_ln86_802_reg_1374_pp0_iter2_reg <= icmp_ln86_802_reg_1374_pp0_iter1_reg;
        icmp_ln86_803_reg_1380 <= icmp_ln86_803_fu_388_p2;
        icmp_ln86_803_reg_1380_pp0_iter1_reg <= icmp_ln86_803_reg_1380;
        icmp_ln86_803_reg_1380_pp0_iter2_reg <= icmp_ln86_803_reg_1380_pp0_iter1_reg;
        icmp_ln86_803_reg_1380_pp0_iter3_reg <= icmp_ln86_803_reg_1380_pp0_iter2_reg;
        icmp_ln86_804_reg_1386 <= icmp_ln86_804_fu_394_p2;
        icmp_ln86_804_reg_1386_pp0_iter1_reg <= icmp_ln86_804_reg_1386;
        icmp_ln86_804_reg_1386_pp0_iter2_reg <= icmp_ln86_804_reg_1386_pp0_iter1_reg;
        icmp_ln86_804_reg_1386_pp0_iter3_reg <= icmp_ln86_804_reg_1386_pp0_iter2_reg;
        icmp_ln86_805_reg_1392 <= icmp_ln86_805_fu_400_p2;
        icmp_ln86_805_reg_1392_pp0_iter1_reg <= icmp_ln86_805_reg_1392;
        icmp_ln86_805_reg_1392_pp0_iter2_reg <= icmp_ln86_805_reg_1392_pp0_iter1_reg;
        icmp_ln86_805_reg_1392_pp0_iter3_reg <= icmp_ln86_805_reg_1392_pp0_iter2_reg;
        icmp_ln86_805_reg_1392_pp0_iter4_reg <= icmp_ln86_805_reg_1392_pp0_iter3_reg;
        icmp_ln86_806_reg_1398 <= icmp_ln86_806_fu_406_p2;
        icmp_ln86_806_reg_1398_pp0_iter1_reg <= icmp_ln86_806_reg_1398;
        icmp_ln86_806_reg_1398_pp0_iter2_reg <= icmp_ln86_806_reg_1398_pp0_iter1_reg;
        icmp_ln86_806_reg_1398_pp0_iter3_reg <= icmp_ln86_806_reg_1398_pp0_iter2_reg;
        icmp_ln86_806_reg_1398_pp0_iter4_reg <= icmp_ln86_806_reg_1398_pp0_iter3_reg;
        icmp_ln86_806_reg_1398_pp0_iter5_reg <= icmp_ln86_806_reg_1398_pp0_iter4_reg;
        icmp_ln86_807_reg_1404 <= icmp_ln86_807_fu_412_p2;
        icmp_ln86_807_reg_1404_pp0_iter1_reg <= icmp_ln86_807_reg_1404;
        icmp_ln86_807_reg_1404_pp0_iter2_reg <= icmp_ln86_807_reg_1404_pp0_iter1_reg;
        icmp_ln86_807_reg_1404_pp0_iter3_reg <= icmp_ln86_807_reg_1404_pp0_iter2_reg;
        icmp_ln86_807_reg_1404_pp0_iter4_reg <= icmp_ln86_807_reg_1404_pp0_iter3_reg;
        icmp_ln86_807_reg_1404_pp0_iter5_reg <= icmp_ln86_807_reg_1404_pp0_iter4_reg;
        icmp_ln86_807_reg_1404_pp0_iter6_reg <= icmp_ln86_807_reg_1404_pp0_iter5_reg;
        icmp_ln86_808_reg_1410 <= icmp_ln86_808_fu_418_p2;
        icmp_ln86_808_reg_1410_pp0_iter1_reg <= icmp_ln86_808_reg_1410;
        icmp_ln86_809_reg_1415 <= icmp_ln86_809_fu_424_p2;
        icmp_ln86_810_reg_1420 <= icmp_ln86_810_fu_430_p2;
        icmp_ln86_810_reg_1420_pp0_iter1_reg <= icmp_ln86_810_reg_1420;
        icmp_ln86_811_reg_1425 <= icmp_ln86_811_fu_436_p2;
        icmp_ln86_811_reg_1425_pp0_iter1_reg <= icmp_ln86_811_reg_1425;
        icmp_ln86_812_reg_1430 <= icmp_ln86_812_fu_442_p2;
        icmp_ln86_812_reg_1430_pp0_iter1_reg <= icmp_ln86_812_reg_1430;
        icmp_ln86_812_reg_1430_pp0_iter2_reg <= icmp_ln86_812_reg_1430_pp0_iter1_reg;
        icmp_ln86_813_reg_1435 <= icmp_ln86_813_fu_448_p2;
        icmp_ln86_813_reg_1435_pp0_iter1_reg <= icmp_ln86_813_reg_1435;
        icmp_ln86_813_reg_1435_pp0_iter2_reg <= icmp_ln86_813_reg_1435_pp0_iter1_reg;
        icmp_ln86_814_reg_1440 <= icmp_ln86_814_fu_454_p2;
        icmp_ln86_814_reg_1440_pp0_iter1_reg <= icmp_ln86_814_reg_1440;
        icmp_ln86_814_reg_1440_pp0_iter2_reg <= icmp_ln86_814_reg_1440_pp0_iter1_reg;
        icmp_ln86_815_reg_1445 <= icmp_ln86_815_fu_460_p2;
        icmp_ln86_815_reg_1445_pp0_iter1_reg <= icmp_ln86_815_reg_1445;
        icmp_ln86_815_reg_1445_pp0_iter2_reg <= icmp_ln86_815_reg_1445_pp0_iter1_reg;
        icmp_ln86_815_reg_1445_pp0_iter3_reg <= icmp_ln86_815_reg_1445_pp0_iter2_reg;
        icmp_ln86_816_reg_1450 <= icmp_ln86_816_fu_466_p2;
        icmp_ln86_816_reg_1450_pp0_iter1_reg <= icmp_ln86_816_reg_1450;
        icmp_ln86_816_reg_1450_pp0_iter2_reg <= icmp_ln86_816_reg_1450_pp0_iter1_reg;
        icmp_ln86_816_reg_1450_pp0_iter3_reg <= icmp_ln86_816_reg_1450_pp0_iter2_reg;
        icmp_ln86_817_reg_1455 <= icmp_ln86_817_fu_472_p2;
        icmp_ln86_817_reg_1455_pp0_iter1_reg <= icmp_ln86_817_reg_1455;
        icmp_ln86_817_reg_1455_pp0_iter2_reg <= icmp_ln86_817_reg_1455_pp0_iter1_reg;
        icmp_ln86_817_reg_1455_pp0_iter3_reg <= icmp_ln86_817_reg_1455_pp0_iter2_reg;
        icmp_ln86_818_reg_1460 <= icmp_ln86_818_fu_478_p2;
        icmp_ln86_818_reg_1460_pp0_iter1_reg <= icmp_ln86_818_reg_1460;
        icmp_ln86_818_reg_1460_pp0_iter2_reg <= icmp_ln86_818_reg_1460_pp0_iter1_reg;
        icmp_ln86_818_reg_1460_pp0_iter3_reg <= icmp_ln86_818_reg_1460_pp0_iter2_reg;
        icmp_ln86_818_reg_1460_pp0_iter4_reg <= icmp_ln86_818_reg_1460_pp0_iter3_reg;
        icmp_ln86_819_reg_1465 <= icmp_ln86_819_fu_484_p2;
        icmp_ln86_819_reg_1465_pp0_iter1_reg <= icmp_ln86_819_reg_1465;
        icmp_ln86_819_reg_1465_pp0_iter2_reg <= icmp_ln86_819_reg_1465_pp0_iter1_reg;
        icmp_ln86_819_reg_1465_pp0_iter3_reg <= icmp_ln86_819_reg_1465_pp0_iter2_reg;
        icmp_ln86_819_reg_1465_pp0_iter4_reg <= icmp_ln86_819_reg_1465_pp0_iter3_reg;
        icmp_ln86_820_reg_1470 <= icmp_ln86_820_fu_490_p2;
        icmp_ln86_820_reg_1470_pp0_iter1_reg <= icmp_ln86_820_reg_1470;
        icmp_ln86_820_reg_1470_pp0_iter2_reg <= icmp_ln86_820_reg_1470_pp0_iter1_reg;
        icmp_ln86_820_reg_1470_pp0_iter3_reg <= icmp_ln86_820_reg_1470_pp0_iter2_reg;
        icmp_ln86_820_reg_1470_pp0_iter4_reg <= icmp_ln86_820_reg_1470_pp0_iter3_reg;
        icmp_ln86_821_reg_1475 <= icmp_ln86_821_fu_496_p2;
        icmp_ln86_821_reg_1475_pp0_iter1_reg <= icmp_ln86_821_reg_1475;
        icmp_ln86_821_reg_1475_pp0_iter2_reg <= icmp_ln86_821_reg_1475_pp0_iter1_reg;
        icmp_ln86_821_reg_1475_pp0_iter3_reg <= icmp_ln86_821_reg_1475_pp0_iter2_reg;
        icmp_ln86_821_reg_1475_pp0_iter4_reg <= icmp_ln86_821_reg_1475_pp0_iter3_reg;
        icmp_ln86_821_reg_1475_pp0_iter5_reg <= icmp_ln86_821_reg_1475_pp0_iter4_reg;
        icmp_ln86_822_reg_1480 <= icmp_ln86_822_fu_502_p2;
        icmp_ln86_822_reg_1480_pp0_iter1_reg <= icmp_ln86_822_reg_1480;
        icmp_ln86_822_reg_1480_pp0_iter2_reg <= icmp_ln86_822_reg_1480_pp0_iter1_reg;
        icmp_ln86_822_reg_1480_pp0_iter3_reg <= icmp_ln86_822_reg_1480_pp0_iter2_reg;
        icmp_ln86_822_reg_1480_pp0_iter4_reg <= icmp_ln86_822_reg_1480_pp0_iter3_reg;
        icmp_ln86_822_reg_1480_pp0_iter5_reg <= icmp_ln86_822_reg_1480_pp0_iter4_reg;
        icmp_ln86_823_reg_1485 <= icmp_ln86_823_fu_508_p2;
        icmp_ln86_823_reg_1485_pp0_iter1_reg <= icmp_ln86_823_reg_1485;
        icmp_ln86_823_reg_1485_pp0_iter2_reg <= icmp_ln86_823_reg_1485_pp0_iter1_reg;
        icmp_ln86_823_reg_1485_pp0_iter3_reg <= icmp_ln86_823_reg_1485_pp0_iter2_reg;
        icmp_ln86_823_reg_1485_pp0_iter4_reg <= icmp_ln86_823_reg_1485_pp0_iter3_reg;
        icmp_ln86_823_reg_1485_pp0_iter5_reg <= icmp_ln86_823_reg_1485_pp0_iter4_reg;
        icmp_ln86_823_reg_1485_pp0_iter6_reg <= icmp_ln86_823_reg_1485_pp0_iter5_reg;
        icmp_ln86_reg_1316 <= icmp_ln86_fu_328_p2;
        icmp_ln86_reg_1316_pp0_iter1_reg <= icmp_ln86_reg_1316;
        icmp_ln86_reg_1316_pp0_iter2_reg <= icmp_ln86_reg_1316_pp0_iter1_reg;
        icmp_ln86_reg_1316_pp0_iter3_reg <= icmp_ln86_reg_1316_pp0_iter2_reg;
        or_ln117_735_reg_1563 <= or_ln117_735_fu_708_p2;
        or_ln117_739_reg_1593 <= or_ln117_739_fu_815_p2;
        or_ln117_744_reg_1626 <= or_ln117_744_fu_954_p2;
        or_ln117_746_reg_1636 <= or_ln117_746_fu_974_p2;
        or_ln117_748_reg_1642 <= or_ln117_748_fu_980_p2;
        or_ln117_748_reg_1642_pp0_iter5_reg <= or_ln117_748_reg_1642;
        or_ln117_750_reg_1650 <= or_ln117_750_fu_1056_p2;
        or_ln117_754_reg_1660 <= or_ln117_754_fu_1131_p2;
        or_ln117_reg_1530 <= or_ln117_fu_570_p2;
        select_ln117_776_reg_1558 <= select_ln117_776_fu_701_p3;
        select_ln117_782_reg_1598 <= select_ln117_782_fu_829_p3;
        select_ln117_788_reg_1631 <= select_ln117_788_fu_966_p3;
        select_ln117_794_reg_1655 <= select_ln117_794_fu_1069_p3;
        select_ln117_798_reg_1665 <= select_ln117_798_fu_1145_p3;
        xor_ln104_reg_1535 <= xor_ln104_fu_576_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        x_0_val_int_reg <= x_0_val;
        x_10_val_int_reg <= x_10_val;
        x_11_val_int_reg <= x_11_val;
        x_12_val_int_reg <= x_12_val;
        x_14_val_int_reg <= x_14_val;
        x_15_val_int_reg <= x_15_val;
        x_1_val_int_reg <= x_1_val;
        x_2_val_int_reg <= x_2_val;
        x_3_val_int_reg <= x_3_val;
        x_6_val_int_reg <= x_6_val;
        x_7_val_int_reg <= x_7_val;
        x_9_val_int_reg <= x_9_val;
    end
end

assign agg_result_fu_1180_p65 = 'bx;

assign agg_result_fu_1180_p66 = ((or_ln117_755_fu_1168_p2[0:0] == 1'b1) ? select_ln117_798_reg_1665 : 5'd31);

assign and_ln102_768_fu_713_p2 = (xor_ln104_reg_1535 & icmp_ln86_795_reg_1332_pp0_iter2_reg);

assign and_ln102_769_fu_530_p2 = (icmp_ln86_796_reg_1338 & and_ln102_reg_1490);

assign and_ln102_770_fu_581_p2 = (icmp_ln86_797_reg_1344_pp0_iter1_reg & and_ln104_reg_1500);

assign and_ln102_771_fu_727_p2 = (icmp_ln86_798_reg_1350_pp0_iter2_reg & and_ln102_768_fu_713_p2);

assign and_ln102_772_fu_847_p2 = (icmp_ln86_799_reg_1356_pp0_iter3_reg & and_ln104_156_reg_1575);

assign and_ln102_773_fu_544_p2 = (icmp_ln86_800_reg_1362 & and_ln102_769_fu_530_p2);

assign and_ln102_774_fu_554_p2 = (icmp_ln86_801_reg_1368 & and_ln104_157_fu_539_p2);

assign and_ln102_775_fu_600_p2 = (icmp_ln86_802_reg_1374_pp0_iter1_reg & and_ln102_770_fu_581_p2);

assign and_ln102_776_fu_737_p2 = (icmp_ln86_803_reg_1380_pp0_iter2_reg & and_ln104_158_reg_1547);

assign and_ln102_777_fu_741_p2 = (icmp_ln86_804_reg_1386_pp0_iter2_reg & and_ln102_771_fu_727_p2);

assign and_ln102_778_fu_871_p2 = (icmp_ln86_805_reg_1392_pp0_iter3_reg & and_ln104_159_fu_842_p2);

assign and_ln102_779_fu_989_p2 = (icmp_ln86_806_reg_1398_pp0_iter4_reg & and_ln102_772_reg_1608);

assign and_ln102_780_fu_1082_p2 = (icmp_ln86_807_reg_1404_pp0_iter5_reg & and_ln104_160_reg_1615_pp0_iter5_reg);

assign and_ln102_781_fu_605_p2 = (icmp_ln86_808_reg_1410_pp0_iter1_reg & and_ln102_773_reg_1518);

assign and_ln102_782_fu_564_p2 = (and_ln102_797_fu_559_p2 & and_ln102_769_fu_530_p2);

assign and_ln102_783_fu_609_p2 = (icmp_ln86_810_reg_1420_pp0_iter1_reg & and_ln102_774_reg_1524);

assign and_ln102_784_fu_618_p2 = (and_ln104_157_reg_1513 & and_ln102_798_fu_613_p2);

assign and_ln102_785_fu_746_p2 = (icmp_ln86_812_reg_1430_pp0_iter2_reg & and_ln102_775_reg_1553);

assign and_ln102_786_fu_755_p2 = (and_ln102_799_fu_750_p2 & and_ln102_770_reg_1541);

assign and_ln102_787_fu_760_p2 = (icmp_ln86_814_reg_1440_pp0_iter2_reg & and_ln102_776_fu_737_p2);

assign and_ln102_788_fu_881_p2 = (and_ln104_158_reg_1547_pp0_iter3_reg & and_ln102_800_fu_876_p2);

assign and_ln102_789_fu_886_p2 = (icmp_ln86_816_reg_1450_pp0_iter3_reg & and_ln102_777_reg_1587);

assign and_ln102_790_fu_895_p2 = (and_ln102_801_fu_890_p2 & and_ln102_771_reg_1581);

assign and_ln102_791_fu_993_p2 = (icmp_ln86_818_reg_1460_pp0_iter4_reg & and_ln102_778_reg_1621);

assign and_ln102_792_fu_1002_p2 = (and_ln104_159_reg_1603 & and_ln102_802_fu_997_p2);

assign and_ln102_793_fu_1007_p2 = (icmp_ln86_820_reg_1470_pp0_iter4_reg & and_ln102_779_fu_989_p2);

assign and_ln102_794_fu_1091_p2 = (and_ln102_803_fu_1086_p2 & and_ln102_772_reg_1608_pp0_iter5_reg);

assign and_ln102_795_fu_1096_p2 = (icmp_ln86_822_reg_1480_pp0_iter5_reg & and_ln102_780_fu_1082_p2);

assign and_ln102_796_fu_1163_p2 = (and_ln104_160_reg_1615_pp0_iter6_reg & and_ln102_804_fu_1158_p2);

assign and_ln102_797_fu_559_p2 = (xor_ln104_389_fu_549_p2 & icmp_ln86_809_reg_1415);

assign and_ln102_798_fu_613_p2 = (xor_ln104_390_fu_595_p2 & icmp_ln86_811_reg_1425_pp0_iter1_reg);

assign and_ln102_799_fu_750_p2 = (xor_ln104_391_fu_732_p2 & icmp_ln86_813_reg_1435_pp0_iter2_reg);

assign and_ln102_800_fu_876_p2 = (xor_ln104_392_fu_861_p2 & icmp_ln86_815_reg_1445_pp0_iter3_reg);

assign and_ln102_801_fu_890_p2 = (xor_ln104_393_fu_866_p2 & icmp_ln86_817_reg_1455_pp0_iter3_reg);

assign and_ln102_802_fu_997_p2 = (xor_ln104_394_fu_984_p2 & icmp_ln86_819_reg_1465_pp0_iter4_reg);

assign and_ln102_803_fu_1086_p2 = (xor_ln104_395_fu_1077_p2 & icmp_ln86_821_reg_1475_pp0_iter5_reg);

assign and_ln102_804_fu_1158_p2 = (xor_ln104_396_fu_1153_p2 & icmp_ln86_823_reg_1485_pp0_iter6_reg);

assign and_ln102_fu_514_p2 = (icmp_ln86_fu_328_p2 & icmp_ln86_794_fu_334_p2);

assign and_ln104_156_fu_722_p2 = (xor_ln104_reg_1535 & xor_ln104_384_fu_717_p2);

assign and_ln104_157_fu_539_p2 = (xor_ln104_385_fu_534_p2 & and_ln102_reg_1490);

assign and_ln104_158_fu_590_p2 = (xor_ln104_386_fu_585_p2 & and_ln104_reg_1500);

assign and_ln104_159_fu_842_p2 = (xor_ln104_387_fu_837_p2 & and_ln102_768_reg_1569);

assign and_ln104_160_fu_856_p2 = (xor_ln104_388_fu_851_p2 & and_ln104_156_reg_1575);

assign and_ln104_fu_525_p2 = (xor_ln104_383_fu_520_p2 & icmp_ln86_reg_1316);

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_return = agg_result_fu_1180_p67;

assign icmp_ln86_794_fu_334_p2 = (($signed(x_0_val_int_reg) < $signed(18'd1023)) ? 1'b1 : 1'b0);

assign icmp_ln86_795_fu_340_p2 = (($signed(x_0_val_int_reg) < $signed(18'd260905)) ? 1'b1 : 1'b0);

assign icmp_ln86_796_fu_346_p2 = (($signed(x_1_val_int_reg) < $signed(18'd261582)) ? 1'b1 : 1'b0);

assign icmp_ln86_797_fu_352_p2 = (($signed(x_1_val_int_reg) < $signed(18'd261073)) ? 1'b1 : 1'b0);

assign icmp_ln86_798_fu_358_p2 = (($signed(x_14_val_int_reg) < $signed(18'd153)) ? 1'b1 : 1'b0);

assign icmp_ln86_799_fu_364_p2 = (($signed(x_14_val_int_reg) < $signed(18'd137)) ? 1'b1 : 1'b0);

assign icmp_ln86_800_fu_370_p2 = (($signed(x_6_val_int_reg) < $signed(18'd1507)) ? 1'b1 : 1'b0);

assign icmp_ln86_801_fu_376_p2 = (($signed(x_15_val_int_reg) < $signed(18'd260897)) ? 1'b1 : 1'b0);

assign icmp_ln86_802_fu_382_p2 = (($signed(x_0_val_int_reg) < $signed(18'd1624)) ? 1'b1 : 1'b0);

assign icmp_ln86_803_fu_388_p2 = (($signed(x_15_val_int_reg) < $signed(18'd260850)) ? 1'b1 : 1'b0);

assign icmp_ln86_804_fu_394_p2 = (($signed(x_14_val_int_reg) < $signed(18'd262138)) ? 1'b1 : 1'b0);

assign icmp_ln86_805_fu_400_p2 = (($signed(x_14_val_int_reg) < $signed(18'd1210)) ? 1'b1 : 1'b0);

assign icmp_ln86_806_fu_406_p2 = (($signed(x_2_val_int_reg) < $signed(18'd118)) ? 1'b1 : 1'b0);

assign icmp_ln86_807_fu_412_p2 = (($signed(x_10_val_int_reg) < $signed(18'd261023)) ? 1'b1 : 1'b0);

assign icmp_ln86_808_fu_418_p2 = (($signed(x_0_val_int_reg) < $signed(18'd548)) ? 1'b1 : 1'b0);

assign icmp_ln86_809_fu_424_p2 = (($signed(x_7_val_int_reg) < $signed(18'd78)) ? 1'b1 : 1'b0);

assign icmp_ln86_810_fu_430_p2 = (($signed(x_14_val_int_reg) < $signed(18'd165)) ? 1'b1 : 1'b0);

assign icmp_ln86_811_fu_436_p2 = (($signed(x_0_val_int_reg) < $signed(18'd619)) ? 1'b1 : 1'b0);

assign icmp_ln86_812_fu_442_p2 = (($signed(x_9_val_int_reg) < $signed(18'd311)) ? 1'b1 : 1'b0);

assign icmp_ln86_813_fu_448_p2 = (($signed(x_9_val_int_reg) < $signed(18'd260965)) ? 1'b1 : 1'b0);

assign icmp_ln86_814_fu_454_p2 = (($signed(x_6_val_int_reg) < $signed(18'd260384)) ? 1'b1 : 1'b0);

assign icmp_ln86_815_fu_460_p2 = (($signed(x_12_val_int_reg) < $signed(18'd259844)) ? 1'b1 : 1'b0);

assign icmp_ln86_816_fu_466_p2 = (($signed(x_3_val_int_reg) < $signed(18'd261822)) ? 1'b1 : 1'b0);

assign icmp_ln86_817_fu_472_p2 = (($signed(x_1_val_int_reg) < $signed(18'd940)) ? 1'b1 : 1'b0);

assign icmp_ln86_818_fu_478_p2 = (($signed(x_1_val_int_reg) < $signed(18'd816)) ? 1'b1 : 1'b0);

assign icmp_ln86_819_fu_484_p2 = (($signed(x_3_val_int_reg) < $signed(18'd1307)) ? 1'b1 : 1'b0);

assign icmp_ln86_820_fu_490_p2 = (($signed(x_2_val_int_reg) < $signed(18'd262002)) ? 1'b1 : 1'b0);

assign icmp_ln86_821_fu_496_p2 = (($signed(x_7_val_int_reg) < $signed(18'd261201)) ? 1'b1 : 1'b0);

assign icmp_ln86_822_fu_502_p2 = (($signed(x_11_val_int_reg) < $signed(18'd261021)) ? 1'b1 : 1'b0);

assign icmp_ln86_823_fu_508_p2 = (($signed(x_2_val_int_reg) < $signed(18'd1729)) ? 1'b1 : 1'b0);

assign icmp_ln86_fu_328_p2 = (($signed(x_15_val_int_reg) < $signed(18'd832)) ? 1'b1 : 1'b0);

assign or_ln117_731_fu_651_p2 = (and_ln102_783_fu_609_p2 | and_ln102_769_reg_1506);

assign or_ln117_732_fu_663_p2 = (and_ln102_774_reg_1524 | and_ln102_769_reg_1506);

assign or_ln117_733_fu_675_p2 = (or_ln117_732_fu_663_p2 | and_ln102_784_fu_618_p2);

assign or_ln117_734_fu_765_p2 = (and_ln102_reg_1490_pp0_iter2_reg | and_ln102_785_fu_746_p2);

assign or_ln117_735_fu_708_p2 = (and_ln102_reg_1490_pp0_iter1_reg | and_ln102_775_fu_600_p2);

assign or_ln117_736_fu_777_p2 = (or_ln117_735_reg_1563 | and_ln102_786_fu_755_p2);

assign or_ln117_737_fu_789_p2 = (and_ln102_reg_1490_pp0_iter2_reg | and_ln102_770_reg_1541);

assign or_ln117_738_fu_801_p2 = (or_ln117_737_fu_789_p2 | and_ln102_787_fu_760_p2);

assign or_ln117_739_fu_815_p2 = (or_ln117_737_fu_789_p2 | and_ln102_776_fu_737_p2);

assign or_ln117_740_fu_900_p2 = (or_ln117_739_reg_1593 | and_ln102_788_fu_881_p2);

assign or_ln117_741_fu_916_p2 = (icmp_ln86_reg_1316_pp0_iter3_reg | and_ln102_789_fu_886_p2);

assign or_ln117_742_fu_928_p2 = (icmp_ln86_reg_1316_pp0_iter3_reg | and_ln102_777_reg_1587);

assign or_ln117_743_fu_940_p2 = (or_ln117_742_fu_928_p2 | and_ln102_790_fu_895_p2);

assign or_ln117_744_fu_954_p2 = (icmp_ln86_reg_1316_pp0_iter3_reg | and_ln102_771_reg_1581);

assign or_ln117_745_fu_1012_p2 = (or_ln117_744_reg_1626 | and_ln102_791_fu_993_p2);

assign or_ln117_746_fu_974_p2 = (or_ln117_744_fu_954_p2 | and_ln102_778_fu_871_p2);

assign or_ln117_747_fu_1024_p2 = (or_ln117_746_reg_1636 | and_ln102_792_fu_1002_p2);

assign or_ln117_748_fu_980_p2 = (icmp_ln86_reg_1316_pp0_iter3_reg | and_ln102_768_reg_1569);

assign or_ln117_749_fu_1044_p2 = (or_ln117_748_reg_1642 | and_ln102_793_fu_1007_p2);

assign or_ln117_750_fu_1056_p2 = (or_ln117_748_reg_1642 | and_ln102_779_fu_989_p2);

assign or_ln117_751_fu_1101_p2 = (or_ln117_750_reg_1650 | and_ln102_794_fu_1091_p2);

assign or_ln117_752_fu_1106_p2 = (or_ln117_748_reg_1642_pp0_iter5_reg | and_ln102_772_reg_1608_pp0_iter5_reg);

assign or_ln117_753_fu_1117_p2 = (or_ln117_752_fu_1106_p2 | and_ln102_795_fu_1096_p2);

assign or_ln117_754_fu_1131_p2 = (or_ln117_752_fu_1106_p2 | and_ln102_780_fu_1082_p2);

assign or_ln117_755_fu_1168_p2 = (or_ln117_754_reg_1660 | and_ln102_796_fu_1163_p2);

assign or_ln117_fu_570_p2 = (and_ln102_782_fu_564_p2 | and_ln102_773_fu_544_p2);

assign select_ln117_771_fu_640_p3 = ((or_ln117_reg_1530[0:0] == 1'b1) ? select_ln117_fu_633_p3 : 2'd3);

assign select_ln117_772_fu_656_p3 = ((and_ln102_769_reg_1506[0:0] == 1'b1) ? zext_ln117_85_fu_647_p1 : 3'd4);

assign select_ln117_773_fu_667_p3 = ((or_ln117_731_fu_651_p2[0:0] == 1'b1) ? select_ln117_772_fu_656_p3 : 3'd5);

assign select_ln117_774_fu_681_p3 = ((or_ln117_732_fu_663_p2[0:0] == 1'b1) ? select_ln117_773_fu_667_p3 : 3'd6);

assign select_ln117_775_fu_689_p3 = ((or_ln117_733_fu_675_p2[0:0] == 1'b1) ? select_ln117_774_fu_681_p3 : 3'd7);

assign select_ln117_776_fu_701_p3 = ((and_ln102_reg_1490_pp0_iter1_reg[0:0] == 1'b1) ? zext_ln117_86_fu_697_p1 : 4'd8);

assign select_ln117_777_fu_770_p3 = ((or_ln117_734_fu_765_p2[0:0] == 1'b1) ? select_ln117_776_reg_1558 : 4'd9);

assign select_ln117_778_fu_782_p3 = ((or_ln117_735_reg_1563[0:0] == 1'b1) ? select_ln117_777_fu_770_p3 : 4'd10);

assign select_ln117_779_fu_793_p3 = ((or_ln117_736_fu_777_p2[0:0] == 1'b1) ? select_ln117_778_fu_782_p3 : 4'd11);

assign select_ln117_780_fu_807_p3 = ((or_ln117_737_fu_789_p2[0:0] == 1'b1) ? select_ln117_779_fu_793_p3 : 4'd12);

assign select_ln117_781_fu_821_p3 = ((or_ln117_738_fu_801_p2[0:0] == 1'b1) ? select_ln117_780_fu_807_p3 : 4'd13);

assign select_ln117_782_fu_829_p3 = ((or_ln117_739_fu_815_p2[0:0] == 1'b1) ? select_ln117_781_fu_821_p3 : 4'd14);

assign select_ln117_783_fu_905_p3 = ((or_ln117_740_fu_900_p2[0:0] == 1'b1) ? select_ln117_782_reg_1598 : 4'd15);

assign select_ln117_784_fu_921_p3 = ((icmp_ln86_reg_1316_pp0_iter3_reg[0:0] == 1'b1) ? zext_ln117_87_fu_912_p1 : 5'd16);

assign select_ln117_785_fu_932_p3 = ((or_ln117_741_fu_916_p2[0:0] == 1'b1) ? select_ln117_784_fu_921_p3 : 5'd17);

assign select_ln117_786_fu_946_p3 = ((or_ln117_742_fu_928_p2[0:0] == 1'b1) ? select_ln117_785_fu_932_p3 : 5'd18);

assign select_ln117_787_fu_958_p3 = ((or_ln117_743_fu_940_p2[0:0] == 1'b1) ? select_ln117_786_fu_946_p3 : 5'd19);

assign select_ln117_788_fu_966_p3 = ((or_ln117_744_fu_954_p2[0:0] == 1'b1) ? select_ln117_787_fu_958_p3 : 5'd20);

assign select_ln117_789_fu_1017_p3 = ((or_ln117_745_fu_1012_p2[0:0] == 1'b1) ? select_ln117_788_reg_1631 : 5'd21);

assign select_ln117_790_fu_1029_p3 = ((or_ln117_746_reg_1636[0:0] == 1'b1) ? select_ln117_789_fu_1017_p3 : 5'd22);

assign select_ln117_791_fu_1036_p3 = ((or_ln117_747_fu_1024_p2[0:0] == 1'b1) ? select_ln117_790_fu_1029_p3 : 5'd23);

assign select_ln117_792_fu_1049_p3 = ((or_ln117_748_reg_1642[0:0] == 1'b1) ? select_ln117_791_fu_1036_p3 : 5'd24);

assign select_ln117_793_fu_1061_p3 = ((or_ln117_749_fu_1044_p2[0:0] == 1'b1) ? select_ln117_792_fu_1049_p3 : 5'd25);

assign select_ln117_794_fu_1069_p3 = ((or_ln117_750_fu_1056_p2[0:0] == 1'b1) ? select_ln117_793_fu_1061_p3 : 5'd26);

assign select_ln117_795_fu_1110_p3 = ((or_ln117_751_fu_1101_p2[0:0] == 1'b1) ? select_ln117_794_reg_1655 : 5'd27);

assign select_ln117_796_fu_1123_p3 = ((or_ln117_752_fu_1106_p2[0:0] == 1'b1) ? select_ln117_795_fu_1110_p3 : 5'd28);

assign select_ln117_797_fu_1137_p3 = ((or_ln117_753_fu_1117_p2[0:0] == 1'b1) ? select_ln117_796_fu_1123_p3 : 5'd29);

assign select_ln117_798_fu_1145_p3 = ((or_ln117_754_fu_1131_p2[0:0] == 1'b1) ? select_ln117_797_fu_1137_p3 : 5'd30);

assign select_ln117_fu_633_p3 = ((and_ln102_773_reg_1518[0:0] == 1'b1) ? zext_ln117_fu_629_p1 : 2'd2);

assign xor_ln104_383_fu_520_p2 = (icmp_ln86_794_reg_1327 ^ 1'd1);

assign xor_ln104_384_fu_717_p2 = (icmp_ln86_795_reg_1332_pp0_iter2_reg ^ 1'd1);

assign xor_ln104_385_fu_534_p2 = (icmp_ln86_796_reg_1338 ^ 1'd1);

assign xor_ln104_386_fu_585_p2 = (icmp_ln86_797_reg_1344_pp0_iter1_reg ^ 1'd1);

assign xor_ln104_387_fu_837_p2 = (icmp_ln86_798_reg_1350_pp0_iter3_reg ^ 1'd1);

assign xor_ln104_388_fu_851_p2 = (icmp_ln86_799_reg_1356_pp0_iter3_reg ^ 1'd1);

assign xor_ln104_389_fu_549_p2 = (icmp_ln86_800_reg_1362 ^ 1'd1);

assign xor_ln104_390_fu_595_p2 = (icmp_ln86_801_reg_1368_pp0_iter1_reg ^ 1'd1);

assign xor_ln104_391_fu_732_p2 = (icmp_ln86_802_reg_1374_pp0_iter2_reg ^ 1'd1);

assign xor_ln104_392_fu_861_p2 = (icmp_ln86_803_reg_1380_pp0_iter3_reg ^ 1'd1);

assign xor_ln104_393_fu_866_p2 = (icmp_ln86_804_reg_1386_pp0_iter3_reg ^ 1'd1);

assign xor_ln104_394_fu_984_p2 = (icmp_ln86_805_reg_1392_pp0_iter4_reg ^ 1'd1);

assign xor_ln104_395_fu_1077_p2 = (icmp_ln86_806_reg_1398_pp0_iter5_reg ^ 1'd1);

assign xor_ln104_396_fu_1153_p2 = (icmp_ln86_807_reg_1404_pp0_iter6_reg ^ 1'd1);

assign xor_ln104_fu_576_p2 = (icmp_ln86_reg_1316_pp0_iter1_reg ^ 1'd1);

assign xor_ln117_fu_623_p2 = (1'd1 ^ and_ln102_781_fu_605_p2);

assign zext_ln117_85_fu_647_p1 = select_ln117_771_fu_640_p3;

assign zext_ln117_86_fu_697_p1 = select_ln117_775_fu_689_p3;

assign zext_ln117_87_fu_912_p1 = select_ln117_783_fu_905_p3;

assign zext_ln117_fu_629_p1 = xor_ln117_fu_623_p2;

endmodule //my_prj_decision_function_28
