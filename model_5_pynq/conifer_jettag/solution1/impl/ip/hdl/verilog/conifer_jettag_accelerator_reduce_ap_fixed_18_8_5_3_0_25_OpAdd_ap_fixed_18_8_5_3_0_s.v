// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module conifer_jettag_accelerator_reduce_ap_fixed_18_8_5_3_0_25_OpAdd_ap_fixed_18_8_5_3_0_s (
        ap_clk,
        ap_rst,
        x_0_val1,
        x_1_val2,
        x_2_val3,
        x_3_val4,
        x_4_val5,
        x_5_val6,
        x_6_val7,
        x_7_val8,
        x_8_val9,
        x_9_val10,
        x_10_val11,
        x_11_val12,
        x_12_val13,
        x_13_val14,
        x_14_val15,
        x_15_val16,
        x_16_val,
        x_17_val,
        x_18_val,
        x_19_val,
        x_20_val,
        x_21_val,
        x_22_val,
        x_23_val,
        x_24_val,
        ap_return,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [17:0] x_0_val1;
input  [17:0] x_1_val2;
input  [17:0] x_2_val3;
input  [17:0] x_3_val4;
input  [17:0] x_4_val5;
input  [17:0] x_5_val6;
input  [17:0] x_6_val7;
input  [17:0] x_7_val8;
input  [17:0] x_8_val9;
input  [17:0] x_9_val10;
input  [17:0] x_10_val11;
input  [17:0] x_11_val12;
input  [17:0] x_12_val13;
input  [17:0] x_13_val14;
input  [17:0] x_14_val15;
input  [17:0] x_15_val16;
input  [17:0] x_16_val;
input  [17:0] x_17_val;
input  [17:0] x_18_val;
input  [17:0] x_19_val;
input  [17:0] x_20_val;
input  [17:0] x_21_val;
input  [17:0] x_22_val;
input  [17:0] x_23_val;
input  [17:0] x_24_val;
output  [17:0] ap_return;
input   ap_ce;

reg[17:0] ap_return;

reg   [17:0] x_22_val_read_reg_316;
wire    ap_block_pp0_stage0_11001;
reg   [17:0] x_19_val_read_reg_321;
reg   [17:0] x_17_val_read_reg_326;
reg   [17:0] x_15_val16_read_reg_331;
reg   [17:0] x_12_val13_read_reg_336;
reg   [17:0] x_9_val10_read_reg_341;
reg   [17:0] x_6_val7_read_reg_346;
wire   [17:0] add_ln34_fu_202_p2;
reg   [17:0] add_ln34_reg_351;
wire   [17:0] add_ln34_2_fu_208_p2;
reg   [17:0] add_ln34_2_reg_356;
wire   [17:0] add_ln34_5_fu_214_p2;
reg   [17:0] add_ln34_5_reg_361;
wire   [17:0] add_ln34_7_fu_220_p2;
reg   [17:0] add_ln34_7_reg_366;
wire   [17:0] add_ln34_12_fu_226_p2;
reg   [17:0] add_ln34_12_reg_371;
wire   [17:0] add_ln34_14_fu_232_p2;
reg   [17:0] add_ln34_14_reg_376;
wire   [17:0] add_ln34_17_fu_238_p2;
reg   [17:0] add_ln34_17_reg_381;
wire   [17:0] add_ln34_19_fu_244_p2;
reg   [17:0] add_ln34_19_reg_386;
wire   [17:0] add_ln34_20_fu_250_p2;
reg   [17:0] add_ln34_20_reg_391;
wire   [17:0] add_ln34_1_fu_256_p2;
reg   [17:0] add_ln34_1_reg_396;
wire   [17:0] add_ln34_3_fu_260_p2;
reg   [17:0] add_ln34_3_reg_401;
wire   [17:0] add_ln34_6_fu_264_p2;
reg   [17:0] add_ln34_6_reg_406;
wire   [17:0] add_ln34_9_fu_268_p2;
reg   [17:0] add_ln34_9_reg_411;
wire   [17:0] add_ln34_13_fu_272_p2;
reg   [17:0] add_ln34_13_reg_416;
wire   [17:0] add_ln34_15_fu_276_p2;
reg   [17:0] add_ln34_15_reg_421;
wire   [17:0] add_ln34_18_fu_280_p2;
reg   [17:0] add_ln34_18_reg_426;
wire   [17:0] add_ln34_21_fu_284_p2;
reg   [17:0] add_ln34_21_reg_431;
wire   [17:0] add_ln34_4_fu_288_p2;
reg   [17:0] add_ln34_4_reg_436;
wire   [17:0] add_ln34_10_fu_292_p2;
reg   [17:0] add_ln34_10_reg_441;
wire   [17:0] add_ln34_16_fu_296_p2;
reg   [17:0] add_ln34_16_reg_446;
wire   [17:0] add_ln34_22_fu_300_p2;
reg   [17:0] add_ln34_22_reg_451;
wire   [17:0] add_ln34_11_fu_304_p2;
reg   [17:0] add_ln34_11_reg_456;
wire   [17:0] add_ln34_23_fu_308_p2;
reg   [17:0] add_ln34_23_reg_461;
wire    ap_block_pp0_stage0;
wire   [17:0] add_ln34_8_fu_312_p2;
reg    ap_ce_reg;
reg   [17:0] x_0_val1_int_reg;
reg   [17:0] x_1_val2_int_reg;
reg   [17:0] x_2_val3_int_reg;
reg   [17:0] x_3_val4_int_reg;
reg   [17:0] x_4_val5_int_reg;
reg   [17:0] x_5_val6_int_reg;
reg   [17:0] x_6_val7_int_reg;
reg   [17:0] x_7_val8_int_reg;
reg   [17:0] x_8_val9_int_reg;
reg   [17:0] x_9_val10_int_reg;
reg   [17:0] x_10_val11_int_reg;
reg   [17:0] x_11_val12_int_reg;
reg   [17:0] x_12_val13_int_reg;
reg   [17:0] x_13_val14_int_reg;
reg   [17:0] x_14_val15_int_reg;
reg   [17:0] x_15_val16_int_reg;
reg   [17:0] x_16_val_int_reg;
reg   [17:0] x_17_val_int_reg;
reg   [17:0] x_18_val_int_reg;
reg   [17:0] x_19_val_int_reg;
reg   [17:0] x_20_val_int_reg;
reg   [17:0] x_21_val_int_reg;
reg   [17:0] x_22_val_int_reg;
reg   [17:0] x_23_val_int_reg;
reg   [17:0] x_24_val_int_reg;
reg   [17:0] ap_return_int_reg;

always @ (posedge ap_clk) begin
    ap_ce_reg <= ap_ce;
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        add_ln34_10_reg_441 <= add_ln34_10_fu_292_p2;
        add_ln34_11_reg_456 <= add_ln34_11_fu_304_p2;
        add_ln34_12_reg_371 <= add_ln34_12_fu_226_p2;
        add_ln34_13_reg_416 <= add_ln34_13_fu_272_p2;
        add_ln34_14_reg_376 <= add_ln34_14_fu_232_p2;
        add_ln34_15_reg_421 <= add_ln34_15_fu_276_p2;
        add_ln34_16_reg_446 <= add_ln34_16_fu_296_p2;
        add_ln34_17_reg_381 <= add_ln34_17_fu_238_p2;
        add_ln34_18_reg_426 <= add_ln34_18_fu_280_p2;
        add_ln34_19_reg_386 <= add_ln34_19_fu_244_p2;
        add_ln34_1_reg_396 <= add_ln34_1_fu_256_p2;
        add_ln34_20_reg_391 <= add_ln34_20_fu_250_p2;
        add_ln34_21_reg_431 <= add_ln34_21_fu_284_p2;
        add_ln34_22_reg_451 <= add_ln34_22_fu_300_p2;
        add_ln34_23_reg_461 <= add_ln34_23_fu_308_p2;
        add_ln34_2_reg_356 <= add_ln34_2_fu_208_p2;
        add_ln34_3_reg_401 <= add_ln34_3_fu_260_p2;
        add_ln34_4_reg_436 <= add_ln34_4_fu_288_p2;
        add_ln34_5_reg_361 <= add_ln34_5_fu_214_p2;
        add_ln34_6_reg_406 <= add_ln34_6_fu_264_p2;
        add_ln34_7_reg_366 <= add_ln34_7_fu_220_p2;
        add_ln34_9_reg_411 <= add_ln34_9_fu_268_p2;
        add_ln34_reg_351 <= add_ln34_fu_202_p2;
        x_12_val13_read_reg_336 <= x_12_val13_int_reg;
        x_15_val16_read_reg_331 <= x_15_val16_int_reg;
        x_17_val_read_reg_326 <= x_17_val_int_reg;
        x_19_val_read_reg_321 <= x_19_val_int_reg;
        x_22_val_read_reg_316 <= x_22_val_int_reg;
        x_6_val7_read_reg_346 <= x_6_val7_int_reg;
        x_9_val10_read_reg_341 <= x_9_val10_int_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce_reg)) begin
        ap_return_int_reg <= add_ln34_8_fu_312_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        x_0_val1_int_reg <= x_0_val1;
        x_10_val11_int_reg <= x_10_val11;
        x_11_val12_int_reg <= x_11_val12;
        x_12_val13_int_reg <= x_12_val13;
        x_13_val14_int_reg <= x_13_val14;
        x_14_val15_int_reg <= x_14_val15;
        x_15_val16_int_reg <= x_15_val16;
        x_16_val_int_reg <= x_16_val;
        x_17_val_int_reg <= x_17_val;
        x_18_val_int_reg <= x_18_val;
        x_19_val_int_reg <= x_19_val;
        x_1_val2_int_reg <= x_1_val2;
        x_20_val_int_reg <= x_20_val;
        x_21_val_int_reg <= x_21_val;
        x_22_val_int_reg <= x_22_val;
        x_23_val_int_reg <= x_23_val;
        x_24_val_int_reg <= x_24_val;
        x_2_val3_int_reg <= x_2_val3;
        x_3_val4_int_reg <= x_3_val4;
        x_4_val5_int_reg <= x_4_val5;
        x_5_val6_int_reg <= x_5_val6;
        x_6_val7_int_reg <= x_6_val7;
        x_7_val8_int_reg <= x_7_val8;
        x_8_val9_int_reg <= x_8_val9;
        x_9_val10_int_reg <= x_9_val10;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return = ap_return_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return = add_ln34_8_fu_312_p2;
    end else begin
        ap_return = 'bx;
    end
end

assign add_ln34_10_fu_292_p2 = (add_ln34_9_reg_411 + add_ln34_6_reg_406);

assign add_ln34_11_fu_304_p2 = (add_ln34_10_reg_441 + add_ln34_4_reg_436);

assign add_ln34_12_fu_226_p2 = (x_11_val12_int_reg + x_10_val11_int_reg);

assign add_ln34_13_fu_272_p2 = (add_ln34_12_reg_371 + x_12_val13_read_reg_336);

assign add_ln34_14_fu_232_p2 = (x_8_val9_int_reg + x_7_val8_int_reg);

assign add_ln34_15_fu_276_p2 = (add_ln34_14_reg_376 + x_9_val10_read_reg_341);

assign add_ln34_16_fu_296_p2 = (add_ln34_15_reg_421 + add_ln34_13_reg_416);

assign add_ln34_17_fu_238_p2 = (x_5_val6_int_reg + x_4_val5_int_reg);

assign add_ln34_18_fu_280_p2 = (add_ln34_17_reg_381 + x_6_val7_read_reg_346);

assign add_ln34_19_fu_244_p2 = (x_3_val4_int_reg + x_2_val3_int_reg);

assign add_ln34_1_fu_256_p2 = (add_ln34_reg_351 + x_17_val_read_reg_326);

assign add_ln34_20_fu_250_p2 = (x_0_val1_int_reg + x_1_val2_int_reg);

assign add_ln34_21_fu_284_p2 = (add_ln34_20_reg_391 + add_ln34_19_reg_386);

assign add_ln34_22_fu_300_p2 = (add_ln34_21_reg_431 + add_ln34_18_reg_426);

assign add_ln34_23_fu_308_p2 = (add_ln34_22_reg_451 + add_ln34_16_reg_446);

assign add_ln34_2_fu_208_p2 = (x_20_val_int_reg + x_21_val_int_reg);

assign add_ln34_3_fu_260_p2 = (add_ln34_2_reg_356 + x_19_val_read_reg_321);

assign add_ln34_4_fu_288_p2 = (add_ln34_3_reg_401 + add_ln34_1_reg_396);

assign add_ln34_5_fu_214_p2 = (x_23_val_int_reg + x_24_val_int_reg);

assign add_ln34_6_fu_264_p2 = (add_ln34_5_reg_361 + x_22_val_read_reg_316);

assign add_ln34_7_fu_220_p2 = (x_14_val15_int_reg + x_13_val14_int_reg);

assign add_ln34_8_fu_312_p2 = (add_ln34_23_reg_461 + add_ln34_11_reg_456);

assign add_ln34_9_fu_268_p2 = (add_ln34_7_reg_366 + x_15_val16_read_reg_331);

assign add_ln34_fu_202_p2 = (x_16_val_int_reg + x_18_val_int_reg);

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

endmodule //conifer_jettag_accelerator_reduce_ap_fixed_18_8_5_3_0_25_OpAdd_ap_fixed_18_8_5_3_0_s
